<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
         version="3.0">


    <!--//// Context ////-->

    <!--
        Default Spring profile used when no active profile is set via JNDI.
        Active profile is configured in META-INF/context.xml or in Servlet Container.
    -->
    <context-param>
       <param-name>spring.profiles.default</param-name>
       <param-value>production,ldap</param-value>
    </context-param>

    <!-- Spring's parameter to identify root path of this webapp.
         This value must be unique per Servlet Container. -->
    <context-param>
        <param-name>webAppRootKey</param-name>
        <param-value>webapp.root.oaas</param-value>
    </context-param>

    <!-- The definition of the root context shared by all servlets and filters. -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>/WEB-INF/root-context.xml</param-value>
    </context-param>

    <!--
        Note for servlet (dispatcher) contexts

        Servlet contexts are automatically initialized via WebApplicationInitializer(es) and
        therefore aren't defined here.
    -->


    <!--//// Listeners ////-->

    <!-- Creates the root context shared by all servlets and filters. -->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <!-- Exposes the request to the current thread, through both LocaleContextHolder and RequestContextHolder. -->
    <listener>
        <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
    </listener>


    <!--//// Filters ////-->

    <filter>
        <filter-name>springSecurityFilterChain</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>

    <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

</web-app>
