#######################################
# Persistence
#

# The host to connect to a MongoDB server. Default is localhost.
persistence.mongo.host=localhost

# The port to connect to a MongoDB server. Default is 27017.
persistence.mongo.port=27017

# The name of the database to connect to. Default is 'oaas'.
persistence.mongo.dbname=oaas

# The username to use when connecting to a MongoDB server.
persistence.mongo.username=oaas

# The password to use when connecting to a MongoDB server.
persistence.mongo.password=


#######################################
# OAuth
#

# The URI at which a user is redirected for authorization.
# Default value: "/oauth/authorize".
oaas.endpoint.authorization=/oauth/authorize

# The URI at which a request for an access token will be serviced.
# Default value: "/oauth/token".
oaas.endpoint.token=/oauth/token

# The default validity (in seconds) of the access token. Zero or negative for
# non-expiring tokens.
oaas.access_token.validity=3600

# Enable Refresh Tokens?
oaas.refresh_token.enabled=true

# The default validity (in seconds) of the Refresh Token.
oaas.refresh_token.validity=2592000

# Enable Authorization Code grant?
# See <http://tools.ietf.org/html/rfc6749#section-1.3.1>
oaas.grant.authorization_code.enabled=true

# Enable Implicit grant?
# See <http://tools.ietf.org/html/rfc6749#section-1.3.2>
oaas.grant.implicit.enabled=true

# Enable Client Credentials grant?
# See <http://tools.ietf.org/html/rfc6749#section-1.3.4>
oaas.grant.client_credentials.enabled=true

# Enable Resource Owner Password Credentials grant?
# See <http://tools.ietf.org/html/rfc6749#section-1.3.3>
oaas.grant.password.enabled=false


#######################################
# RESTful API
#

# The max-age value of the Cache-Control header in /api/v1/tokeninfo.
restapi.tokeninfo.cache.maxage=600


#######################################
# Clients authentication
#

# Allows clients to authenticate using request parameters (form)? This is
# permitted by the specification, but not recommended. Clients should use
# HTTP Basic authentication instead.
auth.client.authentication_scheme.form.allow=true


#######################################
# Users authentication via LDAP
#

# The URL with scheme, host and optionally port to connect to a LDAP server.
auth.user.ldap.server.uri=ldap://localhost:636

# Optional root suffix.
auth.user.ldap.server.base_dn=c=org,cn=example

# A specific pattern used to build the user's DN, for example "uid={0},ou=people".
# The key "{0}" must be present and will be substituted with the username.
auth.user.ldap.user_dn_pattern=uid={0},ou=People

# The search base for user searches. Defaults to "". Only used with a
# 'user_search_filter'.
auth.user.ldap.user_search_base=

# The LDAP filter used to search for users (optional). For example "(uid={0})".
# The substituted parameter is the user's login name.
auth.user.ldap.user_search_filter=

# The name of the LDAP attribute which contains the user's first name.
# Default is "givenName".
auth.user.ldap.attribute.fist_name=givenName

# The name of the LDAP attribute which contains the user's last name.
# Defaults is "sn".
auth.user.ldap.attribute.last_name=sn

# The name of the LDAP attribute which contains the user's e-mail address.
# Default is "mail".
auth.user.ldap.attribute.email=mail
