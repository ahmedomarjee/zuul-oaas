<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:mongo="http://www.springframework.org/schema/data/mongo"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
       http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd
       http://www.springframework.org/schema/data/mongo http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd">

    
    <!--////////// Persistence Configuration //////////-->

 
    <!--///// Mongo database /////-->

    <beans profile="mongo">

        <!-- Define MongoDB instance -->
        <mongo:mongo host="localhost" port="27017" />

        <!-- Configure database access -->
        <mongo:db-factory id="mongoDbFactory"
                          username="auth_server" password=""
                          dbname="auth_server"
                          write-concern="SAFE" />

        <!-- Enable JMX MBeans export -->
        <mongo:jmx />

        <!-- Register converters for mapping domain objects to Mongo and vice versa -->
        <mongo:mapping-converter id="mappingConverter">
            <mongo:custom-converters base-package="cz.cvut.authserver.oauth2.mongo" />
        </mongo:mapping-converter>

        <!-- ConversionService to which are converters automatically registered -->
        <bean id="conversionService" class="org.springframework.context.support.ConversionServiceFactoryBean" />

        <!-- Template that provides basic CRUD operations against Mongo database -->
        <bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
            <constructor-arg name="mongoDbFactory" ref="mongoDbFactory" />
            <property name="writeResultChecking" value="EXCEPTION" />
        </bean>
    </beans>



    <!--///// SQL/JDBC database /////-->

    <beans profile="jdbc">

        <!-- Obtain a reference to the Data Source through JNDI lookup
             see /META-INF/context.xml for database configuration -->
        <jee:jndi-lookup id="dataSource" jndi-name="java:comp/env/jdbc/AuthServerDS"
                         proxy-interface="javax.sql.DataSource"
                         lookup-on-startup="true"
                         cache="true" />

        <!-- Proxy for a target DataSource, fetching actual JDBC Connections lazily,
             i.e. not until first creation of a Statement.-->
        <bean name="lazyDataSourceProxy" class="org.springframework.jdbc.datasource.LazyConnectionDataSourceProxy"
              p:targetDataSource-ref="dataSource" />
    </beans>

</beans>
